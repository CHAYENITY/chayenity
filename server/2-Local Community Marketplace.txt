Local Community Marketplace
รายละเอียดและแผนการส่งงาน
ภาพรวมโปรเจค
แอปพลิเคชันตลาดออนไลน์ในชุมชนท้องถิ่น สำหรับซื้อ-ขาย และแลกเปลี่ยนบริการระหว่างเพื่อนบ้านในละแวกเดียวกัน
คุณสมบัติหลัก (Core Features)
1. การลงทะเบียนและยืนยันตัตน (User Registration & Verification)
* ลงทะเบียนและเข้าสู่ระบบด้วย Firebase Auth
* ยืนยันตำแหน่งที่อยู่ (Location-based verification)
* โปรไฟล์ผู้ใช้ (ชื่อ, รูป, ข้อมูลติดต่อ, ที่อยู่)
* ระบบการยืนยันตัวตน (ID verification - เสมือน)
2. การลงขายสินค้า (Item Listing)
* เพิ่มประกาศขายพร้อมรูปภาพ (ถ่ายหรือเลือกจากแกลเลอรี่)
* ระบบหมวดหมู่สินค้า (เครื่องใช้ไฟฟ้า, เสื้อผ้า, หนังสือ, อื่นๆ)
* กำหนดราคา สภาพสินค้า และรายละเอียด
* ตั้งค่าสถานะการขาย (ยังขาย/ขายแล้ว/จอง)
* การแก้ไขและลบประกาศ
3. ระบบค้นหาและกรอง (Advanced Search & Filtering)
* ค้นหาสินค้าด้วยคำหลัก
* กรองตามหมวดหมู่ ราคา ระยะทาง
* เรียงลำดับ (ราคา, วันที่โพสต์, ระยะทาง)
* ค้นหาตามแผนที่ (Map-based search)
* บันทึกการค้นหาที่ชื่นชอบ
4. ระบบแชทและการสื่อสาร (In-app Messaging)
* แชทระหว่างผู้ซื้อและผู้ขาย
* ส่งรูปภาพในแชท
* สถานะการอ่านข้อความ
* การต่อรองราคาผ่านแชท
* รายการแชททั้งหมด
5. ระบบคะแนนและรีวิว (Rating & Review System)
* ให้คะแนนหลังการซื้อขาย (1-5 ดาว)
* เขียนรีวิวผู้ขายและผู้ซื้อ
* ดูประวัติการให้คะแนนและรีวิว
* ระบบ reputation score
* รายงานผู้ใช้ที่มีพฤติกรรมไม่เหมาะสม
6. การแจ้งเตือน (Push Notifications)
* แจ้งเตือนข้อความใหม่
* แจ้งเตือนเมื่อมีคนสนใจสินค้า
* แจ้งเตือนสินค้าใหม่ในหมวดหมู่ที่สนใจ
* แจ้งเตือนการอัพเดทราคาสินค้าที่ติดตาม
7. รายการโปรดและลิสต์ความต้องการ (Saved Items & Wishlist)
* บันทึกสินค้าที่สนใจ
* สร้างลิสต์ความต้องการ (Wanted List)
* ติดตามสินค้าและการเปลี่ยนแปลงราคา
* แชร์ลิสต์ความต้องการ
8. ประวัติการทำรายการและการใช้งานออฟไลน์ (Transaction History & Offline Access)
* ประวัติการซื้อและขาย
* สถิติการทำรายการ
* เข้าถึงข้อมูลสินค้าที่บันทึกแบบออฟไลน์
* ซิงค์ข้อมูลเมื่อกลับมาออนไลน์
แผนการส่งงาน
Session 1: Project Setup & Dart Basics
ส่งมอบ:
* โครงสร้างโปรเจค Flutter
* Splash Screen และ Onboarding screens (แนะนำการใช้งาน marketplace)
* โค้ด Dart พื้นฐาน (models, utilities, constants)
* Wireframe และ UI mockups ของแอป
Session 2-3: Authentication & Basic Widgets
ส่งมอบ:
* ระบบ Login/Register ด้วย Firebase Auth
* หน้าตั้งค่าโปรไฟล์และข้อมูลติดต่อ
* หน้า Home/Dashboard แสดงสินค้าพื้นฐาน
* Bottom Navigation และ Drawer navigation
* การใช้ Basic Widgets (Card, ListTile, etc.)
Session 4-5: Layout & Advanced Widgets
ส่งมอบ:
* หน้าแสดงรายการสินค้า (GridView/ListView)
* หน้ารายละเอียดสินค้า
* หน้าเพิ่มประกาศขาย (Form with image picker)
* Responsive design สำหรับหน้าจอต่างๆ
* การใช้ Advanced Widgets (Image picker, Dropdown, Chip, etc.)
Session 6-7: State Management
ส่งมอบ:
* ระบบจัดการ State (Provider/Riverpod/Bloc)
* การจัดการข้อมูลสินค้า (CRUD operations)
* การจัดการรถเข็น/รายการโปรด
* Form validation และ error handling
* Loading states และ offline handling
Session 8-9: API Integration & Navigation
ส่งมอบ:
* เชื่อมต่อ Firebase Firestore สำหรับข้อมูลสินค้า
* การใช้ Mock API สำหรับข้อมูลหมวดหมู่
* Navigation ระหว่างหน้าจอ (Named Routes, Arguments passing)
* ระบบค้นหาและกรองสินค้า
* การแสดงผลตามตำแหน่ง (Mock location data)
Session 10-11: Storage, Firebase & Notifications
ส่งมอบ:
* Firebase Storage สำหรับรูปภาพสินค้า
* Firebase Cloud Messaging สำหรับการแจ้งเตือน
* Local Storage สำหรับ saved items และ offline data
* ระบบแชทพื้นฐาน (Firebase Realtime Database)
* การ sync ข้อมูลออนไลน์/ออฟไลน์
Session 12: Best Practices & Final Delivery
ส่งมอบ:
* ระบบรีวิวและคะแนน
* หน้าประวัติการซื้อขาย
* ระบบการรายงานและความปลอดภัย
* การปรับปรุง UX/UI สุดท้าย
* แอปพลิเคชันที่สมบูรณ์
* Code refactoring และ optimization
* การเขียน comments และ documentation
* Presentation (15 นาที) และ Demo วิดีโอ (3-5 นาที)
เกณฑ์การประเมิน
* ความสมบูรณ์ของฟีเจอร์ (30%)
* คุณภาพของโค้ดและ Architecture (25%)
* UI/UX Design และ User Experience (20%)
* การทำงานร่วมกันในทีม (15%)
* การนำเสนอและเอกสาร (10%)
เทคโนโลยีที่ใช้
* Frontend: Flutter/Dart
* Backend: Firebase (Auth, Firestore, Storage, FCM, Realtime Database)
* State Management: Provider หรือ Riverpod
* Local Storage: SharedPreferences, SQLite (sqflite package)
* Images: image_picker, cached_network_image packages
* Maps: Google Maps API หรือ OpenStreetMap (สำหรับแสดงตำแหน่ง)
* Location: geolocator package
* Chat: Firebase Realtime Database
* Payment: Mock Stripe integration (ไม่ใช้เงินจริง)
ข้อมูล Mock ที่ควรเตรียม
* หมวดหมู่สินค้าต่างๆ พร้อมไอคอน
* ข้อมูลสินค้าตัวอย่าง (ชื่อ, ราคา, รูป, คำอธิบาย)
* ข้อมูลผู้ใช้ตัวอย่าง และ reviews
* ข้อมูลพิกัดสถานที่ในพื้นที่ Hat Yai
* ประเภทการรายงาน (spam, inappropriate, etc.)
ข้อควรระวังด้านความปลอดภัย
* การตรวจสอบรูปภาพก่อนอัพโหลด
* การซ่อนข้อมูลส่วนตัวที่ละเอียดอ่อน
* ระบบรายงานและบล็อกผู้ใช้
* การแจ้งเตือนเรื่องความปลอดภัยในการซื้อขาย